generate_controller_layer:
  description: >
    Extract relavent information from {api_result} to generate the controller layer for the Spring Boot application.
    Based on the Implementation Requirements for the Spring Boot Application, create a fully functional controller layer with the following steps:
    - Create Java controller classes for all API endpoints extracted from the {api_result}.
    - Implement methods in the controller classes to interact with the service layer for all CRUD operations.
    - The service layer is located in the {folder_path} folder.
    - Service layer result is {service_result} and entity result is {entity_result} use these results to generate the controller layer.
    - Add Swagger annotations to the controller classes to generate API documentation.
    - Compare generated controller classes against the task list provided in the {api_result} by the tech lead and perform any missing tasks.
    - Create REST controllers with appropriate mappings for all API endpoints.
    - Ensure that nessesary imports are included in the generated controller classes.
    - Ensure that the generated controllers follow RESTful principles and integrate with the service layer.
  expected_output: >
    Java controller class files dynamically generated based on {api_result} for handling API requests, following RESTful principles and adhering to the existing boilerplate folder structure in the {project_name} folder.
    - The generated files should be placed in the existing boilerplate folder structure within the folder at {folder_path}.
    - If there is no folder at {folder_path}, create a folder following the same path named 'controller' and place the generated files in it.
    - The generated files should be structured properly following Spring Boot conventions.


    